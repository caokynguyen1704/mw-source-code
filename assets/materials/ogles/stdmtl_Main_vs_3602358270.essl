//ver200 es stdmtl_Main

uniform float g_shadowdensity;
uniform float g_fTime;
uniform vec3 g_EyePos;
uniform vec3 g_EyePosModel;
uniform vec3 g_LightSCMPos;
uniform vec4 g_ShadowCenter;
uniform mat4 g_depthproj;
uniform mat4 g_referencepoint;
uniform vec3 g_warfogparameter;
uniform vec3 g_warfogcolor;
uniform vec4 g_AmbientLight;
uniform mat4 g_World;
uniform mat4 g_WorldView;
uniform mat4 g_WorldViewProj;
uniform float g_ModelTransparent;
uniform vec3 g_SelfPower;
uniform float g_SpecPower;
uniform vec3 g_SunDirection;
uniform vec4 g_SkyLightColor;
uniform vec4 g_TorchLightColor;
uniform vec4 g_InstanceData;
uniform float g_TransU;
uniform float g_TransV;
uniform float g_ScaleU;
uniform float g_ScaleV;
uniform float g_RotUV;
uniform float g_fUVMul;
uniform float g_ftime;
uniform vec3 g_MaskColor;


attribute vec4 in_var_POSITION;
attribute vec3 in_var_NORMAL;
attribute vec2 in_var_TEXCOORD0;
attribute vec2 in_var_TEXCOORD1;
varying vec4 varying_COLOR0;
varying vec4 varying_TEXCOORD0;
varying vec2 varying_TEXCOORD3;

vec4 _49;

void main()
{
    float _66 = g_InstanceData.x * g_SkyLightColor.w;
    vec3 _84 = ((max(g_SkyLightColor.xyz * _66, g_TorchLightColor.xyz * g_InstanceData.y) * 1.0) + (g_AmbientLight.xyz * (1.0 - _66))) + vec3(0.20000000298023223876953125);
    vec4 _86 = vec4(_84.x, _84.y, _84.z, _49.w);
    _86.w = 0.0;
    float _90 = radians(g_RotUV);
    vec2 _97 = (in_var_TEXCOORD1 - vec2(0.5)) * vec2(g_ScaleU, g_ScaleV);
    float _98 = _97.x;
    float _99 = cos(_90);
    float _101 = _97.y;
    float _102 = sin(_90);
    gl_Position = vec4(in_var_POSITION.xyz, 1.0) * g_WorldViewProj;
    varying_COLOR0 = _86;
    varying_TEXCOORD0 = vec4(in_var_TEXCOORD0.x, in_var_TEXCOORD0.y, _49.z, _49.w);
    varying_TEXCOORD3 = (vec2((_98 * _99) + (_101 * _102), ((-_98) * _102) + (_101 * _99)) + vec2(0.5)) + vec2(g_TransU, g_TransV);
}


//ver200 es stdmtl_Main

uniform float g_shadowdensity;
uniform float g_fTime;
uniform vec3 g_EyePos;
uniform vec3 g_EyePosModel;
uniform vec3 g_LightSCMPos;
uniform vec4 g_ShadowCenter;
uniform mat4 g_depthproj;
uniform mat4 g_referencepoint;
uniform vec3 g_warfogparameter;
uniform vec3 g_warfogcolor;
uniform vec4 g_AmbientLight;
uniform vec4 g_BoneTM[210];
uniform mat4 g_World;
uniform mat4 g_WorldView;
uniform mat4 g_WorldViewProj;
uniform float g_ModelTransparent;
uniform vec3 g_SelfPower;
uniform float g_SpecPower;
uniform vec3 g_SunDirection;
uniform vec4 g_SkyLightColor;
uniform vec4 g_TorchLightColor;
uniform vec4 g_InstanceData;
uniform float g_TransU;
uniform float g_TransV;
uniform float g_ScaleU;
uniform float g_ScaleV;
uniform float g_RotUV;
uniform vec3 g_OverlayColor;


attribute vec4 in_var_POSITION;
attribute vec3 in_var_NORMAL;
attribute vec2 in_var_TEXCOORD0;
attribute vec4 in_var_BLENDWEIGHT;
attribute vec4 in_var_BLENDINDICES;
attribute vec2 in_var_TEXCOORD1;
varying vec4 varying_COLOR0;
varying vec4 varying_TEXCOORD0;
varying vec2 varying_TEXCOORD3;

vec4 _56;

void main()
{
    float _79 = g_InstanceData.x * g_SkyLightColor.w;
    vec3 _97 = ((max(g_SkyLightColor.xyz * _79, g_TorchLightColor.xyz * g_InstanceData.y) * 1.0) + (g_AmbientLight.xyz * (1.0 - _79))) + vec3(0.20000000298023223876953125);
    vec4 _99 = vec4(_97.x, _97.y, _97.z, _56.w);
    _99.w = 0.0;
    float _103 = radians(g_RotUV);
    vec2 _110 = (in_var_TEXCOORD1 - vec2(0.5)) * vec2(g_ScaleU, g_ScaleV);
    float _111 = _110.x;
    float _112 = cos(_103);
    float _114 = _110.y;
    float _115 = sin(_103);
    gl_Position = vec4(dot(in_var_POSITION, g_BoneTM[0]), dot(in_var_POSITION, g_BoneTM[1]), dot(in_var_POSITION, g_BoneTM[2]), 1.0) * g_WorldViewProj;
    varying_COLOR0 = _99;
    varying_TEXCOORD0 = vec4(in_var_TEXCOORD0.x, in_var_TEXCOORD0.y, _56.z, _56.w);
    varying_TEXCOORD3 = (vec2((_111 * _112) + (_114 * _115), ((-_111) * _115) + (_114 * _112)) + vec2(0.5)) + vec2(g_TransU, g_TransV);
}


//ver200 es stdmtl_Main

uniform float g_shadowdensity;
uniform float g_fTime;
uniform vec3 g_EyePos;
uniform vec3 g_EyePosModel;
uniform vec3 g_LightSCMPos;
uniform vec4 g_ShadowCenter;
uniform mat4 g_depthproj;
uniform mat4 g_referencepoint;
uniform vec3 g_warfogparameter;
uniform vec3 g_warfogcolor;
uniform vec4 g_AmbientLight;
uniform vec4 g_BoneTM[210];
uniform mat4 g_World;
uniform mat4 g_WorldView;
uniform mat4 g_WorldViewProj;
uniform float g_ModelTransparent;
uniform vec3 g_SelfPower;
uniform float g_SpecPower;
uniform vec3 g_SunDirection;
uniform vec4 g_SkyLightColor;
uniform vec4 g_TorchLightColor;
uniform vec4 g_InstanceData;
uniform vec3 g_OverlayColor;


attribute vec4 in_var_POSITION;
attribute vec3 in_var_NORMAL;
attribute vec2 in_var_TEXCOORD0;
attribute vec4 in_var_BLENDWEIGHT;
attribute vec4 in_var_BLENDINDICES;
varying vec4 varying_COLOR0;
varying vec4 varying_TEXCOORD0;

vec4 _50;

void main()
{
    ivec4 _58 = ivec4(in_var_BLENDINDICES * 3.0);
    int _59 = _58.x;
    int _74 = _58.y;
    float _102 = g_InstanceData.x * g_SkyLightColor.w;
    vec3 _124 = (((max(g_SkyLightColor.xyz * _102, g_TorchLightColor.xyz * g_InstanceData.y) * 1.0) + (g_AmbientLight.xyz * (1.0 - _102))) + vec3(0.20000000298023223876953125)).xyz + g_SelfPower;
    vec4 _126 = vec4(_124.x, _124.y, _124.z, _50.w);
    _126.w = 0.0;
    gl_Position = vec4((vec3(dot(in_var_POSITION, g_BoneTM[_59]), dot(in_var_POSITION, g_BoneTM[_59 + 1]), dot(in_var_POSITION, g_BoneTM[_59 + 2])) * in_var_BLENDWEIGHT.x) + (vec3(dot(in_var_POSITION, g_BoneTM[_74]), dot(in_var_POSITION, g_BoneTM[_74 + 1]), dot(in_var_POSITION, g_BoneTM[_74 + 2])) * in_var_BLENDWEIGHT.y), 1.0) * g_WorldViewProj;
    varying_COLOR0 = _126;
    varying_TEXCOORD0 = vec4(in_var_TEXCOORD0.x, in_var_TEXCOORD0.y, _50.z, _50.w);
}


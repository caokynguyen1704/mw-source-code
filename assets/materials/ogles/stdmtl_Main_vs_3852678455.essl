//ver200 es stdmtl_Main

uniform float g_shadowdensity;
uniform float g_fTime;
uniform vec3 g_EyePos;
uniform vec3 g_EyePosModel;
uniform vec3 g_LightSCMPos;
uniform vec4 g_ShadowCenter;
uniform mat4 g_depthproj;
uniform mat4 g_referencepoint;
uniform vec3 g_warfogparameter;
uniform vec3 g_warfogcolor;
uniform vec4 g_AmbientLight;
uniform vec4 g_DistFogColor;
uniform vec4 g_FogParam;
uniform vec4 g_BoneTM[210];
uniform mat4 g_World;
uniform mat4 g_WorldView;
uniform mat4 g_WorldViewProj;
uniform float g_ModelTransparent;
uniform vec3 g_SelfPower;
uniform float g_SpecPower;
uniform vec3 g_SunDirection;
uniform vec4 g_SkyLightColor;
uniform vec4 g_TorchLightColor;
uniform vec4 g_InstanceData;
uniform float g_TransU;
uniform float g_TransV;
uniform float g_ScaleU;
uniform float g_ScaleV;
uniform float g_RotUV;
uniform float g_fUVMul;
uniform float g_ftime;


attribute vec4 in_var_POSITION;
attribute vec3 in_var_NORMAL;
attribute vec2 in_var_TEXCOORD0;
attribute vec4 in_var_BLENDWEIGHT;
attribute vec4 in_var_BLENDINDICES;
attribute vec2 in_var_TEXCOORD1;
varying vec4 varying_COLOR0;
varying vec4 varying_TEXCOORD0;
varying vec2 varying_TEXCOORD2;
varying vec2 varying_TEXCOORD3;

vec4 _63;

void main()
{
    ivec4 _71 = ivec4(in_var_BLENDINDICES * 3.0);
    int _72 = _71.x;
    int _87 = _71.y;
    int _103 = _71.z;
    vec3 _118 = ((vec3(dot(in_var_POSITION, g_BoneTM[_72]), dot(in_var_POSITION, g_BoneTM[_72 + 1]), dot(in_var_POSITION, g_BoneTM[_72 + 2])) * in_var_BLENDWEIGHT.x) + (vec3(dot(in_var_POSITION, g_BoneTM[_87]), dot(in_var_POSITION, g_BoneTM[_87 + 1]), dot(in_var_POSITION, g_BoneTM[_87 + 2])) * in_var_BLENDWEIGHT.y)) + (vec3(dot(in_var_POSITION, g_BoneTM[_103]), dot(in_var_POSITION, g_BoneTM[_103 + 1]), dot(in_var_POSITION, g_BoneTM[_103 + 2])) * in_var_BLENDWEIGHT.z);
    float _131 = g_InstanceData.x * g_SkyLightColor.w;
    vec3 _149 = ((max(g_SkyLightColor.xyz * _131, g_TorchLightColor.xyz * g_InstanceData.y) * 1.0) + (g_AmbientLight.xyz * (1.0 - _131))) + vec3(0.20000000298023223876953125);
    vec4 _151 = vec4(_149.x, _149.y, _149.z, _63.w);
    _151.w = 0.0;
    float _167 = radians(g_RotUV);
    vec2 _174 = (in_var_TEXCOORD1 - vec2(0.5)) * vec2(g_ScaleU, g_ScaleV);
    float _175 = _174.x;
    float _176 = cos(_167);
    float _178 = _174.y;
    float _179 = sin(_167);
    gl_Position = vec4(_118, 1.0) * g_WorldViewProj;
    varying_COLOR0 = _151;
    varying_TEXCOORD0 = vec4(in_var_TEXCOORD0.x, in_var_TEXCOORD0.y, _63.z, _63.w);
    varying_TEXCOORD2 = clamp(vec2((g_FogParam.y - distance(_118, g_EyePosModel)) / (g_FogParam.y - g_FogParam.x), 1.0), vec2(0.0), vec2(1.0));
    varying_TEXCOORD3 = (vec2((_175 * _176) + (_178 * _179), ((-_175) * _179) + (_178 * _176)) + vec2(0.5)) + vec2(g_TransU, g_TransV);
}


//ver200 es stdmtl_Main

uniform float g_shadowdensity;
uniform float g_fTime;
uniform vec3 g_EyePos;
uniform vec3 g_EyePosModel;
uniform vec3 g_LightSCMPos;
uniform vec4 g_ShadowCenter;
uniform mat4 g_depthproj;
uniform mat4 g_referencepoint;
uniform vec3 g_warfogparameter;
uniform vec3 g_warfogcolor;
uniform vec4 g_AmbientLight;
uniform vec4 g_DistFogColor;
uniform vec4 g_FogParam;
uniform vec4 g_BoneTM[210];
uniform mat4 g_World;
uniform mat4 g_WorldView;
uniform mat4 g_WorldViewProj;
uniform float g_ModelTransparent;
uniform vec3 g_SelfPower;
uniform float g_SpecPower;
uniform vec3 g_SunDirection;
uniform vec4 g_SkyLightColor;
uniform vec4 g_TorchLightColor;
uniform vec4 g_InstanceData;
uniform vec4 g_RimColor;
uniform float g_RimPower;
uniform float g_TransU;
uniform float g_TransV;
uniform float g_ScaleU;
uniform float g_ScaleV;
uniform float g_RotUV;


attribute vec4 in_var_POSITION;
attribute vec3 in_var_NORMAL;
attribute vec2 in_var_TEXCOORD0;
attribute vec4 in_var_BLENDWEIGHT;
attribute vec4 in_var_BLENDINDICES;
attribute vec2 in_var_TEXCOORD1;
varying vec4 varying_COLOR0;
varying vec4 varying_TEXCOORD0;
varying vec2 varying_TEXCOORD2;
varying vec2 varying_TEXCOORD3;
varying vec3 varying_TEXCOORD4;
varying vec3 varying_TEXCOORD5;

vec4 _68;

void main()
{
    ivec4 _77 = ivec4(in_var_BLENDINDICES * 3.0);
    int _78 = _77.x;
    int _93 = _77.y;
    vec3 _108 = (vec3(dot(in_var_POSITION, g_BoneTM[_78]), dot(in_var_POSITION, g_BoneTM[_78 + 1]), dot(in_var_POSITION, g_BoneTM[_78 + 2])) * in_var_BLENDWEIGHT.x) + (vec3(dot(in_var_POSITION, g_BoneTM[_93]), dot(in_var_POSITION, g_BoneTM[_93 + 1]), dot(in_var_POSITION, g_BoneTM[_93 + 2])) * in_var_BLENDWEIGHT.y);
    vec4 _113 = vec4(_108, 1.0);
    float _140 = g_InstanceData.x * g_SkyLightColor.w;
    vec3 _158 = ((max(g_SkyLightColor.xyz * _140, g_TorchLightColor.xyz * g_InstanceData.y) * 1.0) + (g_AmbientLight.xyz * (1.0 - _140))) + vec3(0.20000000298023223876953125);
    vec4 _160 = vec4(_158.x, _158.y, _158.z, _68.w);
    _160.w = 0.0;
    float _176 = radians(g_RotUV);
    vec2 _183 = (in_var_TEXCOORD1 - vec2(0.5)) * vec2(g_ScaleU, g_ScaleV);
    float _184 = _183.x;
    float _185 = cos(_176);
    float _187 = _183.y;
    float _188 = sin(_176);
    gl_Position = _113 * g_WorldViewProj;
    varying_COLOR0 = _160;
    varying_TEXCOORD0 = vec4(in_var_TEXCOORD0.x, in_var_TEXCOORD0.y, _68.z, _68.w);
    varying_TEXCOORD2 = clamp(vec2((g_FogParam.y - distance(_108, g_EyePosModel)) / (g_FogParam.y - g_FogParam.x), 1.0), vec2(0.0), vec2(1.0));
    varying_TEXCOORD3 = (vec2((_184 * _185) + (_187 * _188), ((-_184) * _188) + (_187 * _185)) + vec2(0.5)) + vec2(g_TransU, g_TransV);
    varying_TEXCOORD4 = normalize(normalize(normalize(in_var_NORMAL) * mat3(g_World[0].xyz, g_World[1].xyz, g_World[2].xyz)));
    varying_TEXCOORD5 = normalize(g_EyePos - (_113 * g_World).xyz);
}


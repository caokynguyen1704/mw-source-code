//ver200 es stdmtl_Main
precision mediump float;
precision highp int;

uniform highp float g_shadowdensity;
uniform highp float g_fTime;
uniform highp vec3 g_EyePos;
uniform highp vec3 g_EyePosModel;
uniform highp vec3 g_LightSCMPos;
uniform highp vec4 g_ShadowCenter;
uniform highp mat4 g_depthproj;
uniform highp mat4 g_referencepoint;
uniform highp vec3 g_warfogparameter;
uniform highp vec3 g_warfogcolor;
uniform highp vec4 g_AmbientLight;
uniform highp mat4 g_World;
uniform highp mat4 g_WorldView;
uniform highp mat4 g_WorldViewProj;
uniform highp float g_ModelTransparent;
uniform highp vec3 g_SelfPower;
uniform highp float g_SpecPower;
uniform highp vec3 g_SunDirection;
uniform highp vec4 g_SkyLightColor;
uniform highp vec4 g_TorchLightColor;
uniform highp vec4 g_InstanceData;
uniform highp float g_fUVMul;
uniform highp float g_ftime;
uniform highp vec3 g_OverlayColor;


uniform highp sampler2D s_DiffuseSampler;
uniform highp sampler2D s_EmissiveSampler;

varying highp vec4 in_var_POSITION;
varying highp vec4 varying_COLOR0;
varying highp vec4 varying_TEXCOORD0;

void main()
{
    highp vec4 _48 = texture2D(s_DiffuseSampler, varying_TEXCOORD0.xy);
    if ((_48.w - 0.5) < 0.0)
    {
        discard;
    }
    highp vec3 _74 = ((clamp(varying_COLOR0, vec4(0.0), vec4(1.0)).xyz * _48.xyz).xyz + g_OverlayColor).xyz + (texture2D(s_EmissiveSampler, varying_TEXCOORD0.xy * g_fUVMul) * g_ftime).xyz;
    gl_FragColor = vec4(_74.x, _74.y, _74.z, _48.w);
}


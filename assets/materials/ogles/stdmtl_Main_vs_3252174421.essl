//ver200 es stdmtl_Main

uniform float g_shadowdensity;
uniform float g_fTime;
uniform vec3 g_EyePos;
uniform vec3 g_EyePosModel;
uniform vec3 g_LightSCMPos;
uniform vec4 g_ShadowCenter;
uniform mat4 g_depthproj;
uniform mat4 g_referencepoint;
uniform vec3 g_warfogparameter;
uniform vec3 g_warfogcolor;
uniform vec4 g_AmbientLight;
uniform vec4 g_BoneTM[210];
uniform mat4 g_World;
uniform mat4 g_WorldView;
uniform mat4 g_WorldViewProj;
uniform float g_ModelTransparent;
uniform vec3 g_SelfPower;
uniform float g_SpecPower;
uniform vec3 g_SunDirection;
uniform vec4 g_SkyLightColor;
uniform vec4 g_TorchLightColor;
uniform vec4 g_InstanceData;
uniform vec4 g_RimColor;
uniform float g_RimPower;
uniform vec3 g_OverlayColor;


attribute vec4 in_var_POSITION;
attribute vec3 in_var_NORMAL;
attribute vec2 in_var_TEXCOORD0;
attribute vec4 in_var_BLENDWEIGHT;
attribute vec4 in_var_BLENDINDICES;
varying vec4 varying_COLOR0;
varying vec4 varying_TEXCOORD0;
varying vec3 varying_TEXCOORD4;
varying vec3 varying_TEXCOORD5;

vec4 _55;

void main()
{
    ivec4 _64 = ivec4(in_var_BLENDINDICES * 3.0);
    int _65 = _64.x;
    int _80 = _64.y;
    int _96 = _64.z;
    vec4 _116 = vec4(((vec3(dot(in_var_POSITION, g_BoneTM[_65]), dot(in_var_POSITION, g_BoneTM[_65 + 1]), dot(in_var_POSITION, g_BoneTM[_65 + 2])) * in_var_BLENDWEIGHT.x) + (vec3(dot(in_var_POSITION, g_BoneTM[_80]), dot(in_var_POSITION, g_BoneTM[_80 + 1]), dot(in_var_POSITION, g_BoneTM[_80 + 2])) * in_var_BLENDWEIGHT.y)) + (vec3(dot(in_var_POSITION, g_BoneTM[_96]), dot(in_var_POSITION, g_BoneTM[_96 + 1]), dot(in_var_POSITION, g_BoneTM[_96 + 2])) * in_var_BLENDWEIGHT.z), 1.0);
    float _143 = g_InstanceData.x * g_SkyLightColor.w;
    vec3 _165 = (((max(g_SkyLightColor.xyz * _143, g_TorchLightColor.xyz * g_InstanceData.y) * 1.0) + (g_AmbientLight.xyz * (1.0 - _143))) + vec3(0.20000000298023223876953125)).xyz + g_SelfPower;
    vec4 _167 = vec4(_165.x, _165.y, _165.z, _55.w);
    _167.w = 0.0;
    gl_Position = _116 * g_WorldViewProj;
    varying_COLOR0 = _167;
    varying_TEXCOORD0 = vec4(in_var_TEXCOORD0.x, in_var_TEXCOORD0.y, _55.z, _55.w);
    varying_TEXCOORD4 = normalize(normalize(normalize(in_var_NORMAL) * mat3(g_World[0].xyz, g_World[1].xyz, g_World[2].xyz)));
    varying_TEXCOORD5 = normalize(g_EyePos - (_116 * g_World).xyz);
}


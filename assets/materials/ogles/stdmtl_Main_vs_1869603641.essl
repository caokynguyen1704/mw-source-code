//ver200 es stdmtl_Main

uniform float g_shadowdensity;
uniform float g_fTime;
uniform vec3 g_EyePos;
uniform vec3 g_EyePosModel;
uniform vec3 g_LightSCMPos;
uniform vec4 g_ShadowCenter;
uniform mat4 g_depthproj;
uniform mat4 g_referencepoint;
uniform vec3 g_warfogparameter;
uniform vec3 g_warfogcolor;
uniform vec4 g_AmbientLight;
uniform mat4 g_World;
uniform mat4 g_WorldView;
uniform mat4 g_WorldViewProj;
uniform float g_ModelTransparent;
uniform vec3 g_SelfPower;
uniform float g_SpecPower;
uniform vec3 g_SunDirection;
uniform vec4 g_SkyLightColor;
uniform vec4 g_TorchLightColor;
uniform vec4 g_InstanceData;
uniform float g_fUVMul;
uniform float g_ftime;
uniform vec3 g_OverlayColor;


attribute vec4 in_var_POSITION;
attribute vec3 in_var_NORMAL;
attribute vec2 in_var_TEXCOORD0;
varying vec4 varying_COLOR0;
varying vec4 varying_TEXCOORD0;

vec4 _39;

void main()
{
    float _55 = g_InstanceData.x * g_SkyLightColor.w;
    vec3 _73 = ((max(g_SkyLightColor.xyz * _55, g_TorchLightColor.xyz * g_InstanceData.y) * 1.0) + (g_AmbientLight.xyz * (1.0 - _55))) + vec3(0.20000000298023223876953125);
    vec4 _75 = vec4(_73.x, _73.y, _73.z, _39.w);
    _75.w = 0.0;
    gl_Position = vec4(in_var_POSITION.xyz, 1.0) * g_WorldViewProj;
    varying_COLOR0 = _75;
    varying_TEXCOORD0 = vec4(in_var_TEXCOORD0.x, in_var_TEXCOORD0.y, _39.z, _39.w);
}


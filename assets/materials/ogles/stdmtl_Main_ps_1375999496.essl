//ver200 es stdmtl_Main
precision mediump float;
precision highp int;

uniform highp float g_shadowdensity;
uniform highp float g_fTime;
uniform highp vec3 g_EyePos;
uniform highp vec3 g_EyePosModel;
uniform highp vec3 g_LightSCMPos;
uniform highp vec4 g_ShadowCenter;
uniform highp mat4 g_depthproj;
uniform highp mat4 g_referencepoint;
uniform highp vec3 g_warfogparameter;
uniform highp vec3 g_warfogcolor;
uniform highp vec4 g_AmbientLight;
uniform highp vec4 g_DistFogColor;
uniform highp vec4 g_FogParam;
uniform highp mat4 g_World;
uniform highp mat4 g_WorldView;
uniform highp mat4 g_WorldViewProj;
uniform highp float g_ModelTransparent;
uniform highp vec3 g_SelfPower;
uniform highp float g_SpecPower;
uniform highp vec3 g_SunDirection;
uniform highp vec4 g_SkyLightColor;
uniform highp vec4 g_TorchLightColor;
uniform highp vec4 g_InstanceData;
uniform highp vec3 g_MaskColor;


uniform highp sampler2D s_DiffuseSampler;
uniform highp sampler2D s_AlphaDISampler;
uniform highp sampler2D s_OverlaySampler;

varying highp vec4 in_var_POSITION;
varying highp vec4 varying_COLOR0;
varying highp vec4 varying_TEXCOORD0;
varying highp vec2 varying_TEXCOORD2;

void main()
{
    highp vec4 _55 = texture2D(s_AlphaDISampler, varying_TEXCOORD0.xy);
    highp float _56 = _55.x;
    highp vec4 _57 = texture2D(s_DiffuseSampler, varying_TEXCOORD0.xy);
    _57.w = _56;
    if ((_56 - 0.5) < 0.0)
    {
        discard;
    }
    highp vec4 _65 = texture2D(s_OverlaySampler, varying_TEXCOORD0.xy);
    highp vec3 _86 = mix(g_DistFogColor.xyz, (mix(varying_COLOR0.xyz, vec3(1.0), vec3(_56)).xyz * mix(_57.xyz, _65.xyz * g_MaskColor, vec3(_65.w)).xyz).xyz, vec3(varying_TEXCOORD2.x));
    gl_FragColor = vec4(_86.x, _86.y, _86.z, _57.w);
}


//ver200 es stdmtl_Main
precision mediump float;
precision highp int;

uniform highp float g_shadowdensity;
uniform highp float g_fTime;
uniform highp vec3 g_EyePos;
uniform highp vec3 g_EyePosModel;
uniform highp vec3 g_LightSCMPos;
uniform highp vec4 g_ShadowCenter;
uniform highp mat4 g_depthproj;
uniform highp mat4 g_referencepoint;
uniform highp vec3 g_warfogparameter;
uniform highp vec3 g_warfogcolor;
uniform highp vec4 g_AmbientLight;
uniform highp vec4 g_DistFogColor;
uniform highp vec4 g_FogParam;
uniform highp vec4 g_BoneTM[210];
uniform highp mat4 g_World;
uniform highp mat4 g_WorldView;
uniform highp mat4 g_WorldViewProj;
uniform highp float g_ModelTransparent;
uniform highp vec3 g_SelfPower;
uniform highp float g_SpecPower;
uniform highp vec3 g_SunDirection;
uniform highp vec4 g_SkyLightColor;
uniform highp vec4 g_TorchLightColor;
uniform highp vec4 g_InstanceData;
uniform highp float g_fUVMul;
uniform highp float g_ftime;
uniform highp vec3 g_MaskColor;


uniform highp sampler2D s_DiffuseSampler;
uniform highp sampler2D s_OverlaySampler;
uniform highp sampler2D s_EmissiveSampler;

varying highp vec4 in_var_POSITION;
varying highp vec4 varying_COLOR0;
varying highp vec4 varying_TEXCOORD0;
varying highp vec2 varying_TEXCOORD2;

void main()
{
    highp vec4 _56 = texture2D(s_DiffuseSampler, varying_TEXCOORD0.xy);
    highp vec4 _60 = texture2D(s_OverlaySampler, varying_TEXCOORD0.xy);
    highp vec3 _92 = mix(g_DistFogColor.xyz, ((clamp(varying_COLOR0, vec4(0.0), vec4(1.0)).xyz * mix(_56.xyz, _60.xyz * g_MaskColor, vec3(_60.w)).xyz).xyz + (texture2D(s_EmissiveSampler, varying_TEXCOORD0.xy * g_fUVMul) * g_ftime).xyz).xyz, vec3(varying_TEXCOORD2.x));
    gl_FragColor = vec4(_92.x, _92.y, _92.z, _56.w);
}


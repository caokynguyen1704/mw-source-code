//ver200 es stdmtl_Main

uniform float g_shadowdensity;
uniform float g_fTime;
uniform vec3 g_EyePos;
uniform vec3 g_EyePosModel;
uniform vec3 g_LightSCMPos;
uniform vec4 g_ShadowCenter;
uniform mat4 g_depthproj;
uniform mat4 g_referencepoint;
uniform vec3 g_warfogparameter;
uniform vec3 g_warfogcolor;
uniform vec4 g_AmbientLight;
uniform vec4 g_DistFogColor;
uniform vec4 g_FogParam;
uniform vec4 g_BoneTM[210];
uniform mat4 g_World;
uniform mat4 g_WorldView;
uniform mat4 g_WorldViewProj;
uniform float g_ModelTransparent;
uniform vec3 g_SelfPower;
uniform float g_SpecPower;
uniform vec3 g_SunDirection;
uniform vec4 g_SkyLightColor;
uniform vec4 g_TorchLightColor;
uniform vec4 g_InstanceData;
uniform vec3 g_OverlayColor;


attribute vec4 in_var_POSITION;
attribute vec3 in_var_NORMAL;
attribute vec2 in_var_TEXCOORD0;
attribute vec4 in_var_BLENDWEIGHT;
attribute vec4 in_var_BLENDINDICES;
varying vec4 varying_COLOR0;
varying vec4 varying_TEXCOORD0;
varying vec2 varying_TEXCOORD2;

vec4 _53;

void main()
{
    float _60 = dot(in_var_POSITION, g_BoneTM[0]);
    float _63 = dot(in_var_POSITION, g_BoneTM[1]);
    float _66 = dot(in_var_POSITION, g_BoneTM[2]);
    float _77 = g_InstanceData.x * g_SkyLightColor.w;
    vec3 _99 = (((max(g_SkyLightColor.xyz * _77, g_TorchLightColor.xyz * g_InstanceData.y) * 1.0) + (g_AmbientLight.xyz * (1.0 - _77))) + vec3(0.20000000298023223876953125)).xyz + g_SelfPower;
    vec4 _101 = vec4(_99.x, _99.y, _99.z, _53.w);
    _101.w = 0.0;
    gl_Position = vec4(_60, _63, _66, 1.0) * g_WorldViewProj;
    varying_COLOR0 = _101;
    varying_TEXCOORD0 = vec4(in_var_TEXCOORD0.x, in_var_TEXCOORD0.y, _53.z, _53.w);
    varying_TEXCOORD2 = clamp(vec2((g_FogParam.y - distance(vec3(_60, _63, _66), g_EyePosModel)) / (g_FogParam.y - g_FogParam.x), 1.0), vec2(0.0), vec2(1.0));
}

